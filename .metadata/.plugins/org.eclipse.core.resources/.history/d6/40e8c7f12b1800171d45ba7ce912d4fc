package SettingsProgram;

import java.awt.EventQueue;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import org.ini4j.Ini;
import org.ini4j.Profile.Section;

public class MainGUI {

	private JFrame frame;
	private JTable table;
	private String AllConfigsLocation;
	private String GameConfigLocation;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MainGUI window = new MainGUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public MainGUI() {
		initialize();
		loadProperties();
		readIniFile();
	}

	private void readIniFile() {
		Ini ini = new Ini(new FileReader("test.ini"));
        System.out.println("Number of sections: "+ini.size()+"\n");
        for (String sectionName: ini.keySet()) {
            System.out.println("["+sectionName+"]");
            Section section = ini.get(sectionName);
            for (String optionKey: section.keySet()) {
                System.out.println("\t"+optionKey+"="+section.get(optionKey));
            }
        }
	}

	private void loadProperties() {
		
		Properties prop = new Properties();
		InputStream input = null;

		try {

			input = new FileInputStream("config.properties");

			// load a properties file
			prop.load(input);

			// get the property value and print it out
			this.AllConfigsLocation = prop.getProperty("AllConfigsLocation");
			this.GameConfigLocation = prop.getProperty("GameConfigLocation");

		} catch (IOException ex) {
			ex.printStackTrace();
		} finally {
			if (input != null) {
				try {
					input.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}

	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setResizable(false);
		frame.setBounds(100, 100, 600, 600);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenu mnProfiles = new JMenu("Profiles");
		mnFile.add(mnProfiles);
		
		JRadioButtonMenuItem rdbtnmntmHighCooperation = new JRadioButtonMenuItem("High Cooperation");
		mnProfiles.add(rdbtnmntmHighCooperation);
		
		JRadioButtonMenuItem rdbtnmntmLowCooperation = new JRadioButtonMenuItem("Low Cooperation");
		mnProfiles.add(rdbtnmntmLowCooperation);
		
		JCheckBoxMenuItem chckbxmntmCustom = new JCheckBoxMenuItem("Custom");
		chckbxmntmCustom.setSelected(true);
		mnProfiles.add(chckbxmntmCustom);
		
		JSeparator separator = new JSeparator();
		mnFile.add(separator);
		
		JMenuItem mntmPreferences = new JMenuItem("Preferences");
		mnFile.add(mntmPreferences);
		frame.getContentPane().setLayout(null);
		
		table = new JTable(new DefaultTableModel(new Object[]{"Column1", "Column2"}, 56));
		table.setBounds(10, 11, 574, 528);
		frame.getContentPane().add(table);
	}
}
